FORMAT: 1A

HOST: http://api.lab.mu/

# Treehole APIs
Treehole API provides services to post, update content and comments of a hole.

# Group Status
Monitor of API services.

## API Server Status [/status]
### Check API Server Alive [GET]
+ Response 200 (application/json)


# Group Holes
Holes related resources of the **Treehole API**

## Holes Collection [/holes{?since_id,before_id,page,count}]

+ Parameters
    + since\_id (optional, string) ... return holes lager than since_id (i.e. later
    than since_id).
    
    + before\_id (optional, string) ... return holes smaller than before_id (i.e. 
    before than since_id).

+ Model (application/json)
    
    + Headers
    
            <Status>: 200
    
    + Body

            [
                {
                    "id": "545efe76a98d930012da6d4b",
                    "user": "109823742",
                    "created_time": "Tue May 31 17:46:55 +0800 2011",
                    "text": "Hello Treehole! :smile:",
                    "channel": "blackhole",
                    "images": [
                        "1123hopafsd092asd3",
                        "1123hopafsd092asd4",
                    ],
                    "comments_count": 5,
                    "repost_count": 3,
                    "feedbacks": [
                        { "type": "vote", "text": "like", "count": 5 },
                        { "type": "vote", "text": "dislike", "count": 10 },
                    ],
                },
                {
                    "id": "545efe76a98d930012da6d5a",
                    "user": "109823742",
                    "created_time": "Tue May 31 17:46:55 +0800 2011",
                    "text": "To test whether treehole can work",
                    "channel": "blackhole",
                    "images": [
                        "1123hopafsd092asd3",
                        "1123hopafsd0920ad4",
                    ],
                    "comments_count": 5,
                    "repost_count": 3,
                    "feedbacks": [
                        { "type": "vote", "text": "like", "count": 5 },
                        { "type": "vote", "text": "dislike", "count": 10 },
                    ],
                },
            ]

### List all Holes [GET]
Retrive a list of holes by sorted by method specified in parameters(time by
default). 100 at most, and 10 by default. If more than 100 been requested,
an error message will be sent. "number" in request specify thethe number
of holes to get.

+ Response 200 (application/json)

    [Holes Collection][]


### Create a Hole [POST]
+ Request (application/json)

        {
            "user": "109823742",
            "channel": "blackhole",
            "text": "Buy cheese and bread for breakfast.",
            "images": ["1123hopafsd0920ad4"]
        }

+ Response 201 (application/json)

        {
            "id": "545efe76a98d930012da6d5a",
            "user": "109823742",
            "created_time": "Tue May 31 17:46:55 +0800 2011",
            "text": "Buy cheese and bread for breakfast.",
            "channel": "blackhole",
            "images": [
                "1123hopafsd0920ad4",
            ],
            "comments_count": 0,
            "repost_count": 0,
            "feedbacks": [
                { "type": "vote", "text": "like", "count": 0 },
                { "type": "vote", "text": "dislike", "count": 0 },
            ],
        },

+ Request (application/json)

        {
            "user": "545efe76a98d930013da6d5a",
            "channel": "blackhole",
            "text": "Buy cheese and bread for breakfast.",
            "images": ["9"]
        }

+ Response 404 (application/json)

        { "message": "invalid user handle" }

+ Request (application/json)

        {
            "user": "user10",
            "channel": "nonexist",
            "text": "Buy cheese and bread for breakfast.",
            "images": ["9"]
        }

+ Response 404 (application/json)

        { "message": "invalid channel" }

## Hole [/holes/{id}]
A single Hole object with all its details

+ Parameters
    + id (required, string, `1`) ... String `id` of the Hole to
    perform action with, auto generated by MongoDB.

+ Model (application/json)

    + Body
    
            {
                "id": "545efe76a98d930012da6d4b",
                "user": "109823742",
                "created_time": "Tue May 31 17:46:55 +0800 2011",
                "text": "Hello Treehole! :smile:",
                "channel": "blackhole",
                "images": [
                    "1123hopafsd092asd3",
                    "1123hopafsd092asd4",
                ],
                "comments_count": 5,
                "repost_count": 3,
                "feedbacks": [
                    { "type": "vote", "text": "like", "count": 5 },
                    { "type": "vote", "text": "dislike", "count": 10 },
                ],
            }

### Retrieve a Hole [GET]
+ Response 200 (application/json)

    [Hole][]

+ Response 404 (application/json)

        { "message": "invalid hole id" }

### Remove a Hole [DELETE]
+ Response 204

## Hole Comments [/holes/{id}/comments]

+ Model (application/json)
    
        [
            {
                "hole_id": "545efe76a98d930012da6d4b",
                "from_user": "2147483648",
                "reply_to": "545e28a80000000000000000"
                "text": "this is a comment",
            },
            {
                "hole_id": "545efe76a98d930012da6d4a",
                "from_user": "2147483648",
                "reply_to": "545e28a80000000000000000"
                "text": "this is another comment",
            },
        ]

### Retrive comments of a Hole [GET]

+ Response 200 (application/json)

    [Hole Comments][]

+ Response 404 (application/json)

        { "message": "invalid hole id" }

### Post a comment under a Hole [POST]
+ Request (application/json)

        { "user": "user4", "text": "this is a comment" }

+ Response 201 (application/json)

        { "_id": "3" }

+ Request (application/json)

        { "user": "user5", "text": "this is a comment" }

+ Response 404 (application/json)

        { "message": "invalid user handle" }

+ Request (application/json)

        { "user": "user5", "text": "this is a comment" }

+ Response 404 (application/json)

        { "message": "invalid hole id" }

### Remove a comments [DELETE]
+ Response 204


# Group Images
Images related resources of the **Treehole API**

## Images Collection [/image]
Service for upload and host images.

### Add a New Image [POST]

+ Response 201 (application/json)

        { "_id": "3" }

## Image [/image/{id}]

+ Parameters
    + id (required, string, `1`)

### Get an Existing Image [GET]

+ Response 200 (application/json)

        { "url": "/img/3.jpg" }

+ Response 404 (application/json)

        { "message": "invalid image id" }

# Group Users
Users related resources of the **Treehole API**

## Users Collection [/users]

### Create a User [POST]
+ Request (application/json)

        { "handle": "user" }

+ Response 201 (application/json)

        { "id": "3" }

+ Request (application/json)

        { "handle": "user5" }

+ Response 400 (application/json)

        { "message": "handle already exists" }

## User [/users/{handle}]

+ Parameters
    + handle (required, string, `user1`) ... Handle of the User to perform action with.
    
+ Model (application/json)

        {
            "_id": "1",
            "handle": "user1"
        }

### Retrieve a User [GET]
+ Response 200 (application/json)

        {
            "_id": "1",
            "handle": "user1"
        }

## User's Holes [/users/{handle}/holes]
### Retrive holes of a User [GET]

+ Response 200 (application/json)

        [
            {
                "_id": "1",
                "user": "user1",
                "channel": "blackhole",
                "text": "Jogging in park",
                "images": ["2", "3", "4"],
                "feedback_counters": [4, 1, 2],
                "count_comments": 5,
                "count_repost": 3
            },
            {
                "_id": "2",
                "user": "user1",
                "channel": "blackhole",
                "text": "Pick-up posters from post-office",
                "images": ["1", "5", "7"],
                "feedback_counters": [4, 1, 2],
                "count_comments": 5,
                "count_repost": 3
            }
        ]

+ Response 404 (application/json)

        { "message": "invalid user handle" }

#Group Channels

Channels related resources of the **Treehole API**

## Channels Collection [/channels]


